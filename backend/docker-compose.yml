version: '3.8'

services:
  # 应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: hydration-tracker-app
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    environment:
      NODE_ENV: development
      DB_HOST: mysql
      REDIS_HOST: redis
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hydration-network
    command: npm run dev

  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: hydration-tracker-mysql
    restart: unless-stopped
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-hydration_tracker}
      MYSQL_USER: ${DB_USER:-hydration}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql:ro
      - ./database/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s
    networks:
      - hydration-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: hydration-tracker-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
      - ./database/redis.conf:/usr/local/etc/redis/redis.conf:ro
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
      interval: 10s
    networks:
      - hydration-network

  # phpMyAdmin (可选 - 仅开发环境)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: hydration-tracker-phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${DB_PASSWORD:-rootpassword}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-rootpassword}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - hydration-network
    profiles:
      - dev

  # Redis Commander (可选 - 仅开发环境)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: hydration-tracker-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - hydration-network
    profiles:
      - dev

  # Nginx反向代理 (生产环境)
  nginx:
    image: nginx:alpine
    container_name: hydration-tracker-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./uploads:/var/www/uploads:ro
    depends_on:
      - app
    networks:
      - hydration-network
    profiles:
      - production

# 数据卷
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

# 网络配置
networks:
  hydration-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16